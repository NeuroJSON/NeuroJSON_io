var LZMA=LZMA||{};!function(t){t.iStream=function(t){this.array=new Uint8Array(t),this.size=t.byteLength,this.offset=0},t.iStream.prototype.readByte=function(){return this.array[this.offset++]},t.oStream=function(r){this.size=0,this.buffers=[],r=r||[];for(var e=0,o=r.length;e<o;e++)if(r[e]instanceof t.oStream)for(var s=r[e].buffers,i=0;i<s.length;i++)this.buffers.push(r[e].buffers[i]),this.size+=r[e].buffers[i].length;else this.buffers.push(r[e]),this.size+=r[e].length},t.oStream.prototype.writeBytes=function t(r,e){if(e<=r.byteLength)this.buffers.push(r.slice(0,e));else throw Error("Buffer too small?");this.size+=e},t.oStream.prototype.toUint8Array=function t(){var r=this.size,e=this.buffers;if(1==e.length)return e[0];try{for(var o=new Uint8Array(r),s=0,i=0;s<e.length;s++)o.set(e[s],i),i+=e[s].length;return e[0]=o,e.length=1,o}catch(n){console.error("Error allocating Uint8Array of size: ",r),console.error("Message given was: ",n.toString())}return null},t.oStream.prototype.forEach=function t(r){for(var e=0;e<this.buffers.length;e++)r.call(this,this.buffers[e])},t.oStream.prototype.toCodePoints=function r(){return t.UTF8||this.toUint8Array(),t.UTF8.decode(this.toUint8Array())},t.oStream.prototype.toString=function r(){var e=this.buffers,o="";t.UTF8&&(e=[this.toCodePoints()]);for(var s=0,i=e.length;s<i;s++)for(var n=0,f=e[s].length;n<f;n++)o+=String.fromCharCode(e[s][n]);return o}}(LZMA);